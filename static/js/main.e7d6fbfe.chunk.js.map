{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isList","setIsList","isRevers","setIsRevers","sortBy","setSortBy","copyGoods","sort","good1","good2","length","localeCompare","reverse","className","onClick","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EAAS,UAAOT,GAkBtB,OAhBAS,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQL,GACN,IAAK,SACH,OAAOI,EAAME,OAASD,EAAMC,OAC9B,IAAK,MACH,OAAOF,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAITP,GACFI,EAAUM,UAIV,mCACE,sBAAKC,UAAU,MAAf,UACGb,EAEG,wBACEa,UAAU,MACVC,QAAS,kBAAMb,GAAWD,IAC1Be,KAAK,SAHP,mBAQA,MAEFf,GACA,qCACE,wBACEe,KAAK,SACLF,UAAU,MACVC,QAAS,kBAAMT,EAAU,QAH3B,iCAQA,wBACEU,KAAK,SACLF,UAAU,MACVC,QAAS,kBAAMT,EAAU,WAH3B,4BAQA,wBACEU,KAAK,SACLF,UAAU,MACVC,QAAS,kBAAMX,GAAaD,IAH9B,qBAOA,wBACEa,KAAK,SACLF,UAAU,MACVC,QAAS,WACPX,GAAY,GACZE,EAAU,KALd,mBAWA,oBAAIQ,UAAU,OAAd,SACGP,EAAUU,KAAI,SAAAC,GAAI,OACjB,6BAAgBA,GAAPA,iBCzFzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e7d6fbfe.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isList, setIsList] = useState(true);\n  const [isRevers, setIsRevers] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const copyGoods = [...goodsFromServer];\n\n  copyGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case 'Length':\n        return good1.length - good2.length;\n      case 'abc':\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isRevers) {\n    copyGoods.reverse();\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        {isList\n          ? (\n            <button\n              className=\"btn\"\n              onClick={() => setIsList(!isList)}\n              type=\"button\"\n            >\n              Start\n            </button>\n          )\n          : null}\n\n        {!isList && (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => setSortBy('abc')}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => setSortBy('Length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => setIsRevers(!isRevers)}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => {\n                setIsRevers(false);\n                setSortBy('');\n              }}\n            >\n              Reset\n            </button>\n\n            <ul className=\"list\">\n              {copyGoods.map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}